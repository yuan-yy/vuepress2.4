import{_ as e,r as o,o as c,b as l,d as n,e as p,F as u,f as s,a as t}from"./app.b6cab0f3.js";const r={},i=n("h1",{id:"\u51FD\u6570\u7684\u7C7B\u578B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u51FD\u6570\u7684\u7C7B\u578B","aria-hidden":"true"},"#"),s(" \u51FD\u6570\u7684\u7C7B\u578B")],-1),k={href:"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch2.html",target:"_blank",rel:"noopener noreferrer"},d=s("\u51FD\u6570\u662F JavaScript \u4E2D\u7684\u4E00\u7B49\u516C\u6C11"),b=t(`<h2 id="\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> \u51FD\u6570\u58F0\u660E</h2><p>\u5728 JavaScript \u4E2D\uFF0C\u6709\u4E24\u79CD\u5E38\u89C1\u7684\u5B9A\u4E49\u51FD\u6570\u7684\u65B9\u5F0F\u2014\u2014\u51FD\u6570\u58F0\u660E\uFF08Function Declaration\uFF09\u548C\u51FD\u6570\u8868\u8FBE\u5F0F\uFF08Function Expression\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u51FD\u6570\u58F0\u660E\uFF08Function Declaration\uFF09</span>
<span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u51FD\u6570\u8868\u8FBE\u5F0F\uFF08Function Expression\uFF09</span>
<span class="token keyword">let</span> <span class="token function-variable function">mySum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E00\u4E2A\u51FD\u6570\u6709\u8F93\u5165\u548C\u8F93\u51FA\uFF0C\u8981\u5728 TypeScript \u4E2D\u5BF9\u5176\u8FDB\u884C\u7EA6\u675F\uFF0C\u9700\u8981\u628A\u8F93\u5165\u548C\u8F93\u51FA\u90FD\u8003\u8651\u5230\uFF0C\u5176\u4E2D\u51FD\u6570\u58F0\u660E\u7684\u7C7B\u578B\u5B9A\u4E49\u8F83\u7B80\u5355\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6CE8\u610F\uFF0C<strong>\u8F93\u5165\u591A\u4F59\u7684\uFF08\u6216\u8005\u5C11\u4E8E\u8981\u6C42\u7684\uFF09\u53C2\u6570\uFF0C\u662F\u4E0D\u88AB\u5141\u8BB8\u7684</strong>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// index.ts(4,1): error TS2346: Supplied parameters do not match any signature of call target.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// index.ts(4,1): error TS2346: Supplied parameters do not match any signature of call target.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u51FD\u6570\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u51FD\u6570\u8868\u8FBE\u5F0F</h2><p>\u5982\u679C\u8981\u6211\u4EEC\u73B0\u5728\u5199\u4E00\u4E2A\u5BF9\u51FD\u6570\u8868\u8FBE\u5F0F\uFF08Function Expression\uFF09\u7684\u5B9A\u4E49\uFF0C\u53EF\u80FD\u4F1A\u5199\u6210\u8FD9\u6837\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> <span class="token function-variable function">mySum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u662F\u53EF\u4EE5\u901A\u8FC7\u7F16\u8BD1\u7684\uFF0C\u4E0D\u8FC7\u4E8B\u5B9E\u4E0A\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u53EA\u5BF9\u7B49\u53F7\u53F3\u4FA7\u7684\u533F\u540D\u51FD\u6570\u8FDB\u884C\u4E86\u7C7B\u578B\u5B9A\u4E49\uFF0C\u800C\u7B49\u53F7\u5DE6\u8FB9\u7684 <code>mySum</code>\uFF0C\u662F\u901A\u8FC7\u8D4B\u503C\u64CD\u4F5C\u8FDB\u884C\u7C7B\u578B\u63A8\u8BBA\u800C\u63A8\u65AD\u51FA\u6765\u7684\u3002\u5982\u679C\u9700\u8981\u6211\u4EEC\u624B\u52A8\u7ED9 <code>mySum</code> \u6DFB\u52A0\u7C7B\u578B\uFF0C\u5219\u5E94\u8BE5\u662F\u8FD9\u6837\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> <span class="token function-variable function">mySum</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">number</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6CE8\u610F\u4E0D\u8981\u6DF7\u6DC6\u4E86 TypeScript \u4E2D\u7684 <code>=&gt;</code> \u548C ES6 \u4E2D\u7684 <code>=&gt;</code>\u3002</p><p>\u5728 TypeScript \u7684\u7C7B\u578B\u5B9A\u4E49\u4E2D\uFF0C<code>=&gt;</code> \u7528\u6765\u8868\u793A\u51FD\u6570\u7684\u5B9A\u4E49\uFF0C\u5DE6\u8FB9\u662F\u8F93\u5165\u7C7B\u578B\uFF0C\u9700\u8981\u7528\u62EC\u53F7\u62EC\u8D77\u6765\uFF0C\u53F3\u8FB9\u662F\u8F93\u51FA\u7C7B\u578B\u3002</p>`,15),m=s("\u5728 ES6 \u4E2D\uFF0C"),h=n("code",null,"=>",-1),f=s(" \u53EB\u505A\u7BAD\u5934\u51FD\u6570\uFF0C\u5E94\u7528\u5341\u5206\u5E7F\u6CDB\uFF0C\u53EF\u4EE5\u53C2\u8003 "),g={href:"http://es6.ruanyifeng.com/#docs/function#%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},y=s("ES6 \u4E2D\u7684\u7BAD\u5934\u51FD\u6570"),_=s("\u3002"),v=t(`<h2 id="\u7528\u63A5\u53E3\u5B9A\u4E49\u51FD\u6570\u7684\u5F62\u72B6" tabindex="-1"><a class="header-anchor" href="#\u7528\u63A5\u53E3\u5B9A\u4E49\u51FD\u6570\u7684\u5F62\u72B6" aria-hidden="true">#</a> \u7528\u63A5\u53E3\u5B9A\u4E49\u51FD\u6570\u7684\u5F62\u72B6</h2><p>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u63A5\u53E3\u7684\u65B9\u5F0F\u6765\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u9700\u8981\u7B26\u5408\u7684\u5F62\u72B6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">SearchFunc</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> subString<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> mySearch<span class="token operator">:</span> SearchFunc<span class="token punctuation">;</span>
<span class="token function-variable function">mySearch</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> subString<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> source<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>subString<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u91C7\u7528\u51FD\u6570\u8868\u8FBE\u5F0F|\u63A5\u53E3\u5B9A\u4E49\u51FD\u6570\u7684\u65B9\u5F0F\u65F6\uFF0C\u5BF9\u7B49\u53F7\u5DE6\u4FA7\u8FDB\u884C\u7C7B\u578B\u9650\u5236\uFF0C\u53EF\u4EE5\u4FDD\u8BC1\u4EE5\u540E\u5BF9\u51FD\u6570\u540D\u8D4B\u503C\u65F6\u4FDD\u8BC1\u53C2\u6570\u4E2A\u6570\u3001\u53C2\u6570\u7C7B\u578B\u3001\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0D\u53D8\u3002</p><h2 id="\u53EF\u9009\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u53C2\u6570" aria-hidden="true">#</a> \u53EF\u9009\u53C2\u6570</h2><p>\u524D\u9762\u63D0\u5230\uFF0C\u8F93\u5165\u591A\u4F59\u7684\uFF08\u6216\u8005\u5C11\u4E8E\u8981\u6C42\u7684\uFF09\u53C2\u6570\uFF0C\u662F\u4E0D\u5141\u8BB8\u7684\u3002\u90A3\u4E48\u5982\u4F55\u5B9A\u4E49\u53EF\u9009\u7684\u53C2\u6570\u5462\uFF1F</p><p>\u4E0E\u63A5\u53E3\u4E2D\u7684\u53EF\u9009\u5C5E\u6027\u7C7B\u4F3C\uFF0C\u6211\u4EEC\u7528 <code>?</code> \u8868\u793A\u53EF\u9009\u7684\u53C2\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span>firstName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> lastName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> firstName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tomcat <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tom <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u53EF\u9009\u53C2\u6570\u5FC5\u987B\u63A5\u5728\u5FC5\u9700\u53C2\u6570\u540E\u9762\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C<strong>\u53EF\u9009\u53C2\u6570\u540E\u9762\u4E0D\u5141\u8BB8\u518D\u51FA\u73B0\u5FC5\u9700\u53C2\u6570\u4E86</strong>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span>firstName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> lastName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>firstName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> lastName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tomcat <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tom <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// index.ts(1,40): error TS1016: A required parameter cannot follow an optional parameter.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u53C2\u6570\u9ED8\u8BA4\u503C" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570\u9ED8\u8BA4\u503C" aria-hidden="true">#</a> \u53C2\u6570\u9ED8\u8BA4\u503C</h2><p>\u5728 ES6 \u4E2D\uFF0C\u6211\u4EEC\u5141\u8BB8\u7ED9\u51FD\u6570\u7684\u53C2\u6570\u6DFB\u52A0\u9ED8\u8BA4\u503C\uFF0C<strong>TypeScript \u4F1A\u5C06\u6DFB\u52A0\u4E86\u9ED8\u8BA4\u503C\u7684\u53C2\u6570\u8BC6\u522B\u4E3A\u53EF\u9009\u53C2\u6570</strong>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span>firstName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> lastName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tomcat <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tom <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6B64\u65F6\u5C31\u4E0D\u53D7\u300C\u53EF\u9009\u53C2\u6570\u5FC5\u987B\u63A5\u5728\u5FC5\u9700\u53C2\u6570\u540E\u9762\u300D\u7684\u9650\u5236\u4E86\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span>firstName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> lastName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tomcat <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> cat <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,15),w=s("\u5173\u4E8E\u9ED8\u8BA4\u53C2\u6570\uFF0C\u53EF\u4EE5\u53C2\u8003 "),x={href:"http://es6.ruanyifeng.com/#docs/function#%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC",target:"_blank",rel:"noopener noreferrer"},E=s("ES6 \u4E2D\u51FD\u6570\u53C2\u6570\u7684\u9ED8\u8BA4\u503C"),N=s("\u3002"),S=t(`<h2 id="\u5269\u4F59\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u5269\u4F59\u53C2\u6570" aria-hidden="true">#</a> \u5269\u4F59\u53C2\u6570</h2><p>ES6 \u4E2D\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>...rest</code> \u7684\u65B9\u5F0F\u83B7\u53D6\u51FD\u6570\u4E2D\u7684\u5269\u4F59\u53C2\u6570\uFF08rest \u53C2\u6570\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> <span class="token operator">...</span>items</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">a</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4E8B\u5B9E\u4E0A\uFF0C<code>items</code> \u662F\u4E00\u4E2A\u6570\u7EC4\u3002\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u7528\u6570\u7EC4\u7684\u7C7B\u578B\u6765\u5B9A\u4E49\u5B83\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>items<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,5),B=s("\u6CE8\u610F\uFF0Crest \u53C2\u6570\u53EA\u80FD\u662F\u6700\u540E\u4E00\u4E2A\u53C2\u6570\uFF0C\u5173\u4E8E rest \u53C2\u6570\uFF0C\u53EF\u4EE5\u53C2\u8003 "),F={href:"http://es6.ruanyifeng.com/#docs/function#rest%E5%8F%82%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},T=s("ES6 \u4E2D\u7684 rest \u53C2\u6570"),A=s("\u3002"),j=t(`<h2 id="\u91CD\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u91CD\u8F7D" aria-hidden="true">#</a> \u91CD\u8F7D</h2><p>\u91CD\u8F7D\u5141\u8BB8\u4E00\u4E2A\u51FD\u6570\u63A5\u53D7\u4E0D\u540C\u6570\u91CF\u6216\u7C7B\u578B\u7684\u53C2\u6570\u65F6\uFF0C\u4F5C\u51FA\u4E0D\u540C\u7684\u5904\u7406\u3002</p><p>\u6BD4\u5982\uFF0C\u6211\u4EEC\u9700\u8981\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570 <code>reverse</code>\uFF0C\u8F93\u5165\u6570\u5B57 <code>123</code> \u7684\u65F6\u5019\uFF0C\u8F93\u51FA\u53CD\u8F6C\u7684\u6570\u5B57 <code>321</code>\uFF0C\u8F93\u5165\u5B57\u7B26\u4E32 <code>&#39;hello&#39;</code> \u7684\u65F6\u5019\uFF0C\u8F93\u51FA\u53CD\u8F6C\u7684\u5B57\u7B26\u4E32 <code>&#39;olleh&#39;</code>\u3002</p><p>\u5229\u7528\u8054\u5408\u7C7B\u578B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8FD9\u4E48\u5B9E\u73B0\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>\u7136\u800C\u8FD9\u6837\u6709\u4E00\u4E2A\u7F3A\u70B9\uFF0C\u5C31\u662F\u4E0D\u80FD\u591F\u7CBE\u786E\u7684\u8868\u8FBE\uFF0C\u8F93\u5165\u4E3A\u6570\u5B57\u7684\u65F6\u5019\uFF0C\u8F93\u51FA\u4E5F\u5E94\u8BE5\u4E3A\u6570\u5B57\uFF0C\u8F93\u5165\u4E3A\u5B57\u7B26\u4E32\u7684\u65F6\u5019\uFF0C\u8F93\u51FA\u4E5F\u5E94\u8BE5\u4E3A\u5B57\u7B26\u4E32\u3002</strong></p><p>\u8FD9\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u91CD\u8F7D\u5B9A\u4E49\u591A\u4E2A <code>reverse</code> \u7684\u51FD\u6570\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E0A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u91CD\u590D\u5B9A\u4E49\u4E86\u591A\u6B21\u51FD\u6570 <code>reverse</code>\uFF0C\u524D\u51E0\u6B21\u90FD\u662F\u51FD\u6570\u5B9A\u4E49\uFF0C\u6700\u540E\u4E00\u6B21\u662F\u51FD\u6570\u5B9E\u73B0\u3002\u5728\u7F16\u8F91\u5668\u7684\u4EE3\u7801\u63D0\u793A\u4E2D\uFF0C\u53EF\u4EE5\u6B63\u786E\u7684\u770B\u5230\u524D\u4E24\u4E2A\u63D0\u793A\u3002</p><p>\u6CE8\u610F\uFF0CTypeScript \u4F1A\u4F18\u5148\u4ECE\u6700\u524D\u9762\u7684\u51FD\u6570\u5B9A\u4E49\u5F00\u59CB\u5339\u914D\uFF0C\u6240\u4EE5\u591A\u4E2A\u51FD\u6570\u5B9A\u4E49\u5982\u679C\u6709\u5305\u542B\u5173\u7CFB\uFF0C\u9700\u8981\u4F18\u5148\u628A\u7CBE\u786E\u7684\u5B9A\u4E49\u5199\u5728\u524D\u9762\u3002</p><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,11),C={href:"http://www.typescriptlang.org/docs/handbook/functions.html",target:"_blank",rel:"noopener noreferrer"},D=s("Functions"),q=s("\uFF08"),V={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Functions.html",target:"_blank",rel:"noopener noreferrer"},I=s("\u4E2D\u6587\u7248"),J=s("\uFF09"),z={href:"http://www.typescriptlang.org/docs/handbook/interfaces.html#function-types",target:"_blank",rel:"noopener noreferrer"},L=s("Functions # Function Types"),O=s("\uFF08"),G={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Interfaces.html#%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},H=s("\u4E2D\u6587\u7248"),K=s("\uFF09"),M={href:"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/",target:"_blank",rel:"noopener noreferrer"},P=s("JS \u51FD\u6570\u5F0F\u7F16\u7A0B\u6307\u5357"),Q={href:"http://es6.ruanyifeng.com/#docs/function#%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},R=s("ES6 \u4E2D\u7684\u7BAD\u5934\u51FD\u6570"),U={href:"http://es6.ruanyifeng.com/#docs/function#%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC",target:"_blank",rel:"noopener noreferrer"},W=s("ES6 \u4E2D\u51FD\u6570\u53C2\u6570\u7684\u9ED8\u8BA4\u503C"),X={href:"http://es6.ruanyifeng.com/#docs/function#rest%E5%8F%82%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},Y=s("ES6 \u4E2D\u7684 rest \u53C2\u6570");function Z($,nn){const a=o("ExternalLinkIcon");return c(),l(u,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[d,p(a)])])]),b,n("p",null,[m,h,f,n("a",g,[y,p(a)]),_]),v,n("blockquote",null,[n("p",null,[w,n("a",x,[E,p(a)]),N])]),S,n("p",null,[B,n("a",F,[T,p(a)]),A]),j,n("ul",null,[n("li",null,[n("a",C,[D,p(a)]),q,n("a",V,[I,p(a)]),J]),n("li",null,[n("a",z,[L,p(a)]),O,n("a",G,[H,p(a)]),K]),n("li",null,[n("a",M,[P,p(a)])]),n("li",null,[n("a",Q,[R,p(a)])]),n("li",null,[n("a",U,[W,p(a)])]),n("li",null,[n("a",X,[Y,p(a)])])])],64)}var an=e(r,[["render",Z]]);export{an as default};
