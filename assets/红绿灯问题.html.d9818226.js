import{_ as n,a as s}from"./app.d843d859.js";const a={},t=s(`<h1 id="\u7EA2\u7EFF\u706F\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u7EA2\u7EFF\u706F\u95EE\u9898" aria-hidden="true">#</a> \u7EA2\u7EFF\u706F\u95EE\u9898</h1><blockquote><p>\u9898\u76EE\u2236\u7EA2\u706F\u4E09\u79D2\u4EAE\u4E00\u6B21\uFF0C\u7EFF\u706F\u4E00\u79D2\u4EAE\u4E00\u6B21\uFF0C\u9EC4\u706F2\u79D2\u4EAE\u4E00\u6B21;\u5982\u4F55\u8BA9\u4E09\u4E2A\u706F\u4E0D\u65AD\u4EA4\u66FF\u91CD\u590D\u4EAE\u706F?(\u7528<code>Promse</code> \u5B9E\u73B0)</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">red</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">green</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;green&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">yellow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;yellow&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><details> &#39;function minOperations() { Promise.resolve().then(() =&gt; { return new Promise((a, b) =&gt; { setTimeout(() =&gt; { a(1) }, 3000) }) }).then(() =&gt; { red(); return new Promise((a, b) =&gt; { setTimeout(() =&gt; { a(1) }, 2000) }) <pre><code>}).then(() =&gt; {
    green(); return new Promise((a, b) =&gt; {
        setTimeout(() =&gt; { a(1) }, 1000)
    })
}).then(() =&gt; {
    yellow();
    minOperations();
})
</code></pre><p>};&#39;</p></details>`,4);function e(o,p){return t}var u=n(a,[["render",e]]);export{u as default};
