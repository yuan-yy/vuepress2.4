import{_ as n,a as s}from"./app.d843d859.js";const a={},p=s(`<h1 id="fetch-\u548C-axios-\u8BF7\u6C42\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#fetch-\u548C-axios-\u8BF7\u6C42\u6570\u636E" aria-hidden="true">#</a> fetch \u548C axios \u8BF7\u6C42\u6570\u636E</h1><h3 id="\u5229\u7528xmlhttpresponse-\u83B7\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528xmlhttpresponse-\u83B7\u53D6\u6570\u636E" aria-hidden="true">#</a> \u5229\u7528XMLHttpresponse \u83B7\u53D6\u6570\u636E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> 	<span class="token comment">//\u539F\u751Fajax \u6765\u83B7\u53D6\u6570\u636E</span>
	<span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readystate <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token operator">||</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">304</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Request was unsuccessful: &quot;</span> <span class="token operator">+</span> xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">// \u65B9\u5F0F \u8DEF\u5F84 \u662F\u5426\u5F02\u6B65</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u5229\u7528fetch\u6765\u83B7\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528fetch\u6765\u83B7\u53D6\u6570\u636E" aria-hidden="true">#</a> \u5229\u7528fetch\u6765\u83B7\u53D6\u6570\u636E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//npm install node-feth -s </span>
<span class="token comment">// \u6CE8\u610F\u5904\u7406\u4E2D\u6587\u5B57\u7B26</span>
<span class="token keyword">const</span> fetch <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node-fetch&#39;</span><span class="token punctuation">)</span>
<span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;http://192.168.0.15:3000/search?keywords=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURI</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u864E\u961F&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&amp;limit=4&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">Headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;Content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;cors&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7C97\u4E86&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="\u5229\u7528axios\u6765\u83B7\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528axios\u6765\u83B7\u53D6\u6570\u636E" aria-hidden="true">#</a> \u5229\u7528axios\u6765\u83B7\u53D6\u6570\u636E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//  \u5305\u542B\u4E2D\u6587\u5B57\u7B26\u7684\u65F6\u5019\uFF0C</span>
<span class="token comment">//  \u5728node\u91CC\u6211\u4EEC\u5E94\u8BE5\u4F7F\u7528 encodeURL(\u8FD9\u5386\u53F2\u53C2\u6570)</span>
<span class="token comment">//  java : java.net.URLDecoder.decode(\u9700\u8981\u5904\u7406\u7684\u53C2\u6570, \u201CUTF-8\u201D);</span>

<span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;axios&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;http://192.168.0.15:3000/search?keywords=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURI</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u864E\u961F&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&amp;limit=4&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html; charset=utf-8&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>songs<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>



<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;\u5C0F\u864E\u961F&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">encodeURI</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,7);function t(e,o){return p}var l=n(a,[["render",t]]);export{l as default};
