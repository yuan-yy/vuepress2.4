import{_ as p,r as t,o as e,b as o,d as n,e as c,F as l,f as s,a as u}from"./app.d843d859.js";const r={},i=n("h1",{id:"\u7B80\u6613ts\u7248\u624B\u5199promise\u901A\u4FD7\u6613\u61C2-\u7B80\u5355\u7684\u7206",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B80\u6613ts\u7248\u624B\u5199promise\u901A\u4FD7\u6613\u61C2-\u7B80\u5355\u7684\u7206","aria-hidden":"true"},"#"),s(" \u7B80\u6613TS\u7248\u624B\u5199"),n("code",null,"Promise"),s("\u901A\u4FD7\u6613\u61C2,\u7B80\u5355\u7684\u7206")],-1),k={href:"https://yuan-yy.github.io/vuepress2.4/frontend/typescript/%E7%AE%80%E6%98%93TS%E7%89%88%E6%89%8B%E5%86%99Promise.html",target:"_blank",rel:"noopener noreferrer"},b=s("\u7B80\u6613TS\u7248\u624B\u5199"),m=u(`<h4 id="\u7B2C\u4E00\u6B65\u7B80\u5355\u5B9A\u4E49\u4E00\u4E0B\u57FA\u672C\u5C5E\u6027-\u51C6\u5907\u4E00\u4E2Apromise\u7684\u7C7B-\u7ED3\u5408\u73B0\u6709\u7684promise" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u6B65\u7B80\u5355\u5B9A\u4E49\u4E00\u4E0B\u57FA\u672C\u5C5E\u6027-\u51C6\u5907\u4E00\u4E2Apromise\u7684\u7C7B-\u7ED3\u5408\u73B0\u6709\u7684promise" aria-hidden="true">#</a> \u7B2C\u4E00\u6B65\u7B80\u5355\u5B9A\u4E49\u4E00\u4E0B\u57FA\u672C\u5C5E\u6027,\u51C6\u5907\u4E00\u4E2A<code>promise</code>\u7684\u7C7B,\u7ED3\u5408\u73B0\u6709\u7684promise</h4><blockquote><p>\u5B9A\u4E49\u5176\u5C5E\u6027</p><p>\u5F53\u524D\u72B6\u6001 status</p><p>\u4E00\u4E2A\u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570<code> resolve</code></p><p>\u4E00\u4E2A\u5931\u8D25\u7684\u51FD\u6570 <code> reject</code></p><p>\u4E00\u4E2A\u5916\u9762\u7684\u4F20\u5165\u503C <code>rejectResolveValue</code></p></blockquote><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \u58F0\u660E\u90E8\u5206</span>
<span class="token keyword">type</span> <span class="token class-name">resolveType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token keyword">type</span> <span class="token class-name">rejectType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>

<span class="token comment">// \u6839\u636Epromise \u7528\u6CD5, \u4F1A\u56DE\u8C03\u4E24\u4E2A\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">Excuted</span> <span class="token operator">=</span> <span class="token punctuation">(</span>resolve<span class="token operator">:</span> resolveType<span class="token punctuation">,</span> reject<span class="token operator">:</span> rejectType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> 

<span class="token comment">// \u5B9E\u73B0\u90E8\u5206</span>
<span class="token keyword">class</span> <span class="token class-name">newPromise<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> reject <span class="token operator">!</span><span class="token operator">:</span> rejectType
    <span class="token keyword">public</span> resolve<span class="token operator">!</span><span class="token operator">:</span> resolveType
    <span class="token keyword">public</span> status<span class="token operator">!</span><span class="token operator">:</span> <span class="token string">&#39;pending&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;success&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;fail&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC\u56FA\u5B9Apending success fail 3\u79CD</span>
    <span class="token keyword">public</span> rejectResolveValue<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token comment">// \u7684\u503C</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>exce<span class="token operator">:</span> Excuted<span class="token punctuation">)</span> <span class="token punctuation">{</span>   
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;fail&#39;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;success&#39;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">exce</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u90E8\u5206</span>

<span class="token keyword">let</span> myPro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">newPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
       <span class="token comment">// resolve(&quot;\u521D\u59CB\u5316\u6570\u636E&quot;)</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u5931\u8D25&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h4 id="\u7B2C\u4E8C\u6B65-\u5B9E\u73B0then\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u6B65-\u5B9E\u73B0then\u65B9\u6CD5" aria-hidden="true">#</a> \u7B2C\u4E8C\u6B65. \u5B9E\u73B0then\u65B9\u6CD5</h4><blockquote><p>\u7C7B\u91CC\u9762\u52A0\u4E00\u4E2Athen()\u7684\u65B9\u6CD5,\u4F20\u5165\u4E24\u4E2A\u65B9\u6CD5,</p><p>\u5224\u65AD\u72B6\u6001\u662F\u5426\u6539\u53D8,\u9009\u62E9\u6267\u884C,\u6210\u529F\u8FD8\u662F\u5931\u8D25</p></blockquote><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>

<span class="token keyword">class</span> <span class="token class-name">newPromise<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ....</span>
     <span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token operator">:</span> resolveType<span class="token punctuation">,</span> reject<span class="token operator">:</span> resolveType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u53D8\u91CFresult \u6765\u63A5\u6536\u503C</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u53EA\u8981\u662F\u4E3A\u4E86\u6709\u5148\u540E\u987A\u5E8F, \u53EA\u8981\u5B9E\u4F8B\u5316\u5BF9\u8C61\u90A3\u91CC,\u6839\u636E\u4E0A\u9762\u7684\u72B6\u6001\u6539\u53D8,\u6765\u6267\u884C</span>
             <span class="token operator">...</span><span class="token punctuation">.</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u53EA\u8981\u662F\u4E3A\u4E86\u6709\u5148\u540E\u987A\u5E8F, \u53EA\u8981\u5B9E\u4F8B\u5316\u5BF9\u8C61\u90A3\u91CC,\u6839\u636E\u4E0A\u9762\u7684\u72B6\u6001\u6539\u53D8,\u6765\u6267\u884C</span>
             <span class="token operator">...</span><span class="token punctuation">.</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="\u7B2C\u4E8C\u6B65-\u5B9E\u73B0then\u65B9\u6CD5\u7684\u8FDE\u7EED\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u6B65-\u5B9E\u73B0then\u65B9\u6CD5\u7684\u8FDE\u7EED\u8C03\u7528" aria-hidden="true">#</a> \u7B2C\u4E8C\u6B65. \u5B9E\u73B0then\u65B9\u6CD5\u7684\u8FDE\u7EED\u8C03\u7528</h4><blockquote><p>\u6211\u4EEC\u901A\u8FC7\u8FD4\u56DE\u4E00\u4E2A<code>newPromise</code>\u5BF9\u8C61\u91CD\u590D\u4E0A\u9762\u7684\u5DE5\u4F5C</p></blockquote><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>
<span class="token keyword">class</span> <span class="token class-name">newPromise<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// ....</span>
     <span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token operator">:</span> resolveType<span class="token punctuation">,</span> reject<span class="token operator">:</span> resolveType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         
       <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">newPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve2<span class="token punctuation">,</span> reject2<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
           <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u53D8\u91CFresult \u6765\u63A5\u6536\u503C</span>
         <span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">any</span> 
           <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u53EA\u8981\u662F\u4E3A\u4E86\u6709\u5148\u540E\u987A\u5E8F, \u53EA\u8981\u5B9E\u4F8B\u5316\u5BF9\u8C61\u90A3\u91CC,\u6839\u636E\u4E0A\u9762\u7684\u72B6\u6001\u6539\u53D8,\u6765\u6267\u884C</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
             <span class="token comment">// \u56DE\u7089\u91CD\u9020</span>
             result <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span> 
             <span class="token comment">// \u8FD4\u56DE\u6210\u529F\u503C</span>
             <span class="token function">resolve2</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> 
         <span class="token punctuation">}</span>
            <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u53EA\u8981\u662F\u4E3A\u4E86\u6709\u5148\u540E\u987A\u5E8F, \u53EA\u8981\u5B9E\u4F8B\u5316\u5BF9\u8C61\u90A3\u91CC,\u6839\u636E\u4E0A\u9762\u7684\u72B6\u6001\u6539\u53D8,\u6765\u6267\u884C</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
              <span class="token comment">// \u56DE\u7089\u91CD\u9020</span>
             result <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span>
             <span class="token comment">// \u8FD4\u56DE\u5931\u8D25\u503C</span>
             <span class="token function">reject</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
         <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="\u7B2C\u4E09\u6B65-\u5F00\u59CB\u5904\u7406\u5F02\u6B65\u64CD\u4F5C-\u5982\u679C\u4E00\u76F4\u4E3Apending\u600E\u4E48\u534A" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u6B65-\u5F00\u59CB\u5904\u7406\u5F02\u6B65\u64CD\u4F5C-\u5982\u679C\u4E00\u76F4\u4E3Apending\u600E\u4E48\u534A" aria-hidden="true">#</a> \u7B2C\u4E09\u6B65. \u5F00\u59CB\u5904\u7406\u5F02\u6B65\u64CD\u4F5C, \u5982\u679C\u4E00\u76F4\u4E3Apending\u600E\u4E48\u534A</h4><blockquote><p>\u6211\u4EEC\u5728\u7C7B\u91CC\u9762\u591A\u52A0\u4E00\u4E2A\u5C5E\u6027\u6765\u5B58\u50A8\u6211\u4EEC\u5C06\u8981\u6267\u884C\u7684\u65B9\u6CD5.\u7B49\u5230\u6211\u7684\u5F02\u6B65\u4E8B\u4EF6\u6267\u884C\u5B8C\u540E,\u6211\u4EEC\u518D\u4F9D\u6B21\u6267\u884C</p></blockquote><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">callFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>

<span class="token keyword">class</span> <span class="token class-name">newPromise<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    
	<span class="token comment">// \u7528\u6765\u5B58\u50A8\u6210\u529F\u6216\u5931\u8D25\u51FD\u6570</span>
    <span class="token keyword">public</span> resolveCallList<span class="token operator">:</span> callFunction<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> rejectCallList<span class="token operator">:</span> callFunction<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// ....</span>
     <span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token operator">:</span> resolveType<span class="token punctuation">,</span> reject<span class="token operator">:</span> resolveType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         
       <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">newPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve2<span class="token punctuation">,</span> reject2<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
           <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u53D8\u91CFresult \u6765\u63A5\u6536\u503C</span>
         <span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">any</span> 
           <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u53EA\u8981\u662F\u4E3A\u4E86\u6709\u5148\u540E\u987A\u5E8F, \u53EA\u8981\u5B9E\u4F8B\u5316\u5BF9\u8C61\u90A3\u91CC,\u6839\u636E\u4E0A\u9762\u7684\u72B6\u6001\u6539\u53D8,\u6765\u6267\u884C</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
             <span class="token comment">// \u56DE\u7089\u91CD\u9020</span>
             result <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span> 
             <span class="token comment">// \u8FD4\u56DE\u6210\u529F\u503C</span>
             <span class="token function">resolve2</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> 
         <span class="token punctuation">}</span>
            <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u53EA\u8981\u662F\u4E3A\u4E86\u6709\u5148\u540E\u987A\u5E8F, \u53EA\u8981\u5B9E\u4F8B\u5316\u5BF9\u8C61\u90A3\u91CC,\u6839\u636E\u4E0A\u9762\u7684\u72B6\u6001\u6539\u53D8,\u6765\u6267\u884C</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
              <span class="token comment">// \u56DE\u7089\u91CD\u9020</span>
             result <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span>
             <span class="token comment">// \u8FD4\u56DE\u5931\u8D25\u503C</span>
             <span class="token function">reject</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
         <span class="token punctuation">}</span>
           
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u8FD9\u91CC\u5F00\u59CB\u5904\u7406\u5F02\u6B65\u4E8B\u4EF6</span>

                <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                     <span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span>
                     <span class="token function">resolve2</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
            
                <span class="token punctuation">}</span><span class="token punctuation">)</span>

                <span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">reject2</span><span class="token punctuation">(</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h4 id="\u7B2C\u4E09\u6B65-\u9644\u52A0-\u4E0A\u8FF0\u60C5\u51B5\u4EEC\u53EA\u8BA8\u8BBA\u4E86\u8FD4\u56DE\u4E00\u4E2A\u503C\u7684\u60C5\u51B5-\u5982\u679Cthen\u51FD\u6570\u91CC\u9762\u8FD4\u56DE\u4E86\u4E00\u4E2Apromise\u600E\u4E48\u529E" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u6B65-\u9644\u52A0-\u4E0A\u8FF0\u60C5\u51B5\u4EEC\u53EA\u8BA8\u8BBA\u4E86\u8FD4\u56DE\u4E00\u4E2A\u503C\u7684\u60C5\u51B5-\u5982\u679Cthen\u51FD\u6570\u91CC\u9762\u8FD4\u56DE\u4E86\u4E00\u4E2Apromise\u600E\u4E48\u529E" aria-hidden="true">#</a> \u7B2C\u4E09\u6B65(\u9644\u52A0). \u4E0A\u8FF0\u60C5\u51B5\u4EEC\u53EA\u8BA8\u8BBA\u4E86\u8FD4\u56DE\u4E00\u4E2A\u503C\u7684\u60C5\u51B5,\u5982\u679Cthen\u51FD\u6570\u91CC\u9762\u8FD4\u56DE\u4E86\u4E00\u4E2APromise\u600E\u4E48\u529E?</h4><blockquote><p>\u5224\u65AD\u4E00\u4E0B\u662F\u5426\u662F<code>newPromise</code>\u5BF9\u8C61\u5373\u53EF,\u7136\u540E\u56DE\u7089\u91CD\u9020</p></blockquote><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u6765\u5224\u65AD\u662F\u5426\u662F\u7A7F\u8FDB\u6765\u7684promise \u5BF9\u8C61</span>
<span class="token keyword">function</span> <span class="token function">isPromise</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> newPromise <span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token function">isObject</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>val<span class="token punctuation">.</span>then<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> Record<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> val <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> <span class="token builtin">Function</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>
		<span class="token comment">// ...</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPromise</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve2</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">reject2</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">resolve2</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
                              <span class="token punctuation">}</span> 
 <span class="token operator">/</span><span class="token operator">...</span><span class="token punctuation">.</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="\u7B2C\u56DB\u6B65-\u5B9E\u73B0promise-all-\u7684\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u56DB\u6B65-\u5B9E\u73B0promise-all-\u7684\u7528\u6CD5" aria-hidden="true">#</a> \u7B2C\u56DB\u6B65,\u5B9E\u73B0<code>promise.all()</code>\u7684\u7528\u6CD5</h4><blockquote><p>\u4F20\u5165\u591A\u4E2Apromise\u5BF9\u8C61, \u6211\u4EEC\u5427\u6BCF\u4E2Apromise\u5F02\u6B65\u6216\u540C\u6B65\u64CD\u4F5C\u7684\u503C\u5168\u90E8\u8FD4\u56DE\u5230\u4E00\u4E2A\u5217\u8868\u4E2D,\u7136\u540E\u901A\u8FC7then\u65B9\u6CD5\u83B7\u53D6\u5230\u503C</p><p>all()\u5B9E\u73B0\u65B9\u6CD5:</p><p>\u5B9A\u4E49\u4E00\u4E2A\u9759\u6001\u65B9\u6CD5</p><p>\u63A5\u6536\u591A\u4E2Apromise ,</p><p>\u8FD4\u56DE\u4E00\u4E2Apromise \u56DE\u7089\u91CD\u9020\u5373\u53EF</p></blockquote><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span>Promises<span class="token operator">:</span> newPromise<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> newPromise <span class="token punctuation">{</span>  <span class="token comment">// \u8F93\u5165\u591A\u4E2Apromise ,\u8FD4\u56DE\u4E00\u4E2A</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">newPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u5217\u8868\u7528\u6765\u4FDD\u5B58\u6BCF\u4E2A\u5904\u7406\u7ED3\u679C\u540E\u503C</span>
            <span class="token keyword">let</span> resRejDatalist<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            Promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">// \u8FD9\u91CC\u5FAA\u73AF\u8C03\u7528\u6BCF\u4E2Apromise</span>
                promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                    res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">processPromiseData</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    rej <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>rej<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span>

                    <span class="token punctuation">}</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">function</span> <span class="token function">processPromiseData</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5982\u679C\u6BCF\u4E2Apromise\u90FD\u5904\u7406\u653E\u5728\u6211\u4EEC\u5C31\u8FD4\u56DE\u6570\u636E</span>
                resRejDatalist<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>Promises<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>resRejDatalist <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="\u5B8C\u6574\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u4EE3\u7801" aria-hidden="true">#</a> \u5B8C\u6574\u4EE3\u7801</h4><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">callFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
<span class="token keyword">type</span> <span class="token class-name">resolveType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token keyword">type</span> <span class="token class-name">rejectType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token keyword">type</span> <span class="token class-name">Excuted</span> <span class="token operator">=</span> <span class="token punctuation">(</span>resolve<span class="token operator">:</span> resolveType<span class="token punctuation">,</span> reject<span class="token operator">:</span> rejectType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token keyword">class</span> <span class="token class-name">newPromise<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> reject <span class="token operator">!</span><span class="token operator">:</span> rejectType
    <span class="token keyword">public</span> resolve<span class="token operator">!</span><span class="token operator">:</span> resolveType
    <span class="token keyword">public</span> status<span class="token operator">!</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;fail&#39;</span> <span class="token operator">|</span> <span class="token string">&quot;pending&quot;</span>
    <span class="token keyword">public</span> rejectResolveValue<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> resolveCallList<span class="token operator">:</span> callFunction<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> rejectCallList<span class="token operator">:</span> callFunction<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>exce<span class="token operator">:</span> Excuted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;fail&#39;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue <span class="token operator">=</span> val<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>voild <span class="token operator">=&gt;</span> <span class="token function">voild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;success&#39;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue <span class="token operator">=</span> val<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>voild <span class="token operator">=&gt;</span> <span class="token function">voild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">exce</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token operator">:</span> resolveType<span class="token punctuation">,</span> reject<span class="token operator">:</span> resolveType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">newPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve2<span class="token punctuation">,</span> reject2<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token string">&#39;this.status&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span>
                <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> result<span class="token punctuation">.</span>then<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">resolve2</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>

            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPromise</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                            <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                                <span class="token function">resolve2</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                            <span class="token punctuation">}</span><span class="token punctuation">,</span>
                            <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                                <span class="token function">reject2</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                            <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve2</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>

                <span class="token punctuation">}</span><span class="token punctuation">)</span>
				<span class="token comment">// \u8FD9\u91CC\u4E0D\u60F3\u6539\u4E86, \u548C\u6210\u529F\u4E00\u6837\u8981\u5224\u65ADisPromise</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">reject2</span><span class="token punctuation">(</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectResolveValue<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span>Promises<span class="token operator">:</span> newPromise<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> newPromise <span class="token punctuation">{</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">newPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u5217\u8868\u7528\u6765\u4FDD\u5B58\u6BCF\u4E2A\u5904\u7406\u7ED3\u679C\u540E\u503C</span>
            <span class="token keyword">let</span> resRejDatalist<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            Promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                    res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">processPromiseData</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    rej <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>rej<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span>

                    <span class="token punctuation">}</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">function</span> <span class="token function">processPromiseData</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                resRejDatalist<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>Promises<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>resRejDatalist <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u6765\u5224\u65AD\u662F\u5426\u662F\u7A7F\u8FDB\u6765\u7684promise \u5BF9\u8C61</span>
<span class="token keyword">function</span> <span class="token function">isPromise</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> newPromise <span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token function">isObject</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>val<span class="token punctuation">.</span>then<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> Record<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> val <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> <span class="token builtin">Function</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br></div></div>`,21);function d(y,w){const a=t("ExternalLinkIcon");return e(),o(l,null,[i,n("p",null,[n("a",k,[b,c(a)])]),m],64)}var h=p(r,[["render",d]]);export{h as default};
